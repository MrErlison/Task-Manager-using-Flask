name: HdB

on:
  push:
    branches: ["development"]

jobs:

  build:
    name: Compilacao
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        # date +%s ==> seconds since the Epoch (1970-01-01 00:00 UTC)
        run: docker build -t $(date +%s) .

  test:
    needs: build
    name: Testes Automatizados
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      
      - name: Install dependencies
        run: | 
          python -m pip install pytest 
          python -m pip install Flask-Testing SQLAlchemy flask_sqlalchemy flask_login flask_bcrypt flask_wtf
            
      - name: Run tests
        run: PYTHONPATH=$PYTHONPATH:. pytest

  bandit:
    needs: test
    name: SAST - Bandit
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Bandit Analysis
        uses: PyCQA/bandit-action@v1

  dependency_check:
    needs: bandit
    name: SAST - OWASP Dependency-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

      - name: Check dependency
        uses: dependency-check/Dependency-Check_Action@main
        id: Dependency-Check
        with:
          project: "Task-Manager-using-Flask"
          path: "."
          format: "HTML"
          out: "reports"
          args: >
            --scan "**/*.py"
            --scan "requirements.txt"
            --failOnCVSS 7
            --enableRetired

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Dependency-Check report
          path: ${{github.workspace}}/reports

  zap_test:
    needs: test
    name: DAST - OAWSP ZAP Proxy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t task-image .

      - name: Run application
        run: |
          docker run -d -p 5000:5000 --name task-manager task-image
          sleep 10

      - name: Zap Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: "http://localhost:5000"

  delivery_continuous:
    name: Entrega Cont√≠nua - Push to staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: git fetch origin master
      - run: git push origin HEAD:staging
