name: HdB

on:
  push:
    branches: ["development"]

jobs:

  build:
    name: Compilacao
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        # date +%s ==> seconds since the Epoch (1970-01-01 00:00 UTC)
        run: docker build . --file Dockerfile --tag $(date +%s)

  test:
    needs: build
    name: Testes Automatizados
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      
      - name: Install dependencies
        run: | 
          python -m pip install pytest 
          python -m pip install Flask-Testing SQLAlchemy flask_sqlalchemy flask_login flask_bcrypt flask_wtf
            
      - name: Run tests
        run: PYTHONPATH=$PYTHONPATH:. pytest

  bandit:
    needs: test
    name: SAST - Bandit
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Bandit Analysis
        uses: PyCQA/bandit-action@v4

  dependency_check:
    needs: bandit
    name: SAST - OWASP Dependency-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

      - name: Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Dependency-Check
        with:
          project: "Task-Manager-using-Flask"
          path: "."
          format: "HTML"
          out: "reports"
          args: >
            --scan "**/*.py"
            --scan "requirements.txt"
            --failOnCVSS 7
            --enableRetired

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: Dependency-Check report
          path: ${{github.workspace}}/reports

  zap_test:
    needs: test
    name: DAST - OAWSP ZAP Proxy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t flask-app .

      - name: Run Flask app in Docker
        run: |
          docker run -d -p 5000:5000 --name flask-container flask-app
          sleep 10

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: "http://localhost:5000"

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: ZAP Report
          path: zap_report.html

      - name: Stop Docker container
        if: always()
        run: docker stop flask-container
